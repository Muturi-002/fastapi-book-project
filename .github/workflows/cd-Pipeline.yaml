name: Deploy Application in Cloud Server- CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USERNAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

    steps:
      - name: Get SSH key and set permissions
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Restart SSH server
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$SERVER_IP

      - name: Install Docker
        run: |
          ssh $USER@$SERVER_IP << 'EOF'
            if ! command -v docker &> /dev/null
            then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker is already installed"
              sudo systemctl start docker
              sudo systemctl enable docker
            fi
              sudo groupadd docker
              sudo usermod -aG docker $USER
              newgrp docker
          EOF

          ssh $USER@$SERVER_IP "sudo systemctl status docker"  

      - name: Check whether repo is present
        run: |
          ssh $USER@$SERVER_IP << 'EOF'
            if [ -d "/home/$USER/fastapi-book-project" ]; then
              echo "Repo is present"
            else
              echo "Repo is not present"
                git clone https://github.com/Muturi-002/fastapi-book-project.git /home/$USER/fastapi-book-project
            fi
            cd /home/$USER/fastapi-book-project
            git init && git pull origin main  
          EOF
          
          
      - name: Deploy With Docker 
        run: |
          ssh $USER@$SERVER_IP << 'EOF'
            cd /home/$USER/fastapi-book-project
            sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            
            CONTAINER_ID=$(docker ps -q --filter "name=fastapi-app")
            if [ -n "$CONTAINER_ID" ]; then
              docker stop $CONTAINER_ID
              docker rm $CONTAINER_ID
            fi
            docker build -t fastapi-app .
            docker run --name fastapi-app -d -p 8000:8000 fastapi-app
          EOF